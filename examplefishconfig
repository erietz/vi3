function fish_prompt
    #z --add "$pwd"
    echo (~/bin/powerline-shell.py $status --shell bare)
end

source /opt/vi3/fish/utilities.fish
source /opt/vi3/fish/vi3.fish
source ~/fish/books.fish
source ~/fish/general.fish
source ~/fish/audio.fish


alias ws vi3_workspace
alias gws vi3_get-workspace
alias cws vi3_combine-workspaces
alias rws vi3_rearrange-workspaces
alias saw vi3_select-all-in-workspace
alias mws vi3_move-window-to-workspace
alias tws vi3_take-window-to-workspace

set query blah
set filenames blah



function reload-config
    source ~/.config/fish/config.fish
    source /opt/vi3/fish/vi3.fish
    source /opt/vi3/fish/utilities.fish
    source ~/fish/books.fish
    source ~/fish/general.fish
    source ~/fish/audio.fish
end

alias rl reload-config

function ip3
    ipython3 qtconsole --colors=linux --ConsoleWidget.font_family="DejaVu Sans Mono" --ConsoleWidget.font_size="12"
end

function ip2
    ipython qtconsole --colors=linux --ConsoleWidget.font_family="DejaVu Sans Mono" --ConsoleWidget.font_size="12"
end

function theend
    sudo shutdown -h now
end

function rboot
    sudo shutdown -r now
end

function u
    cd ..
end

function fizzbuzz
    for i in (seq $argv)
        set result ""
        cond "divisible $i 3" then "set result {$result}fizz" else nil
        cond "divisible $i 5" then "set result {$result}buzz" else nil
        cond "exists $result" then "echo $result" else "echo $i"
    end
end

function h
    cd ~
end

function pman
    gksudo synaptic
end

function die
    xkill
end

function logoff
    i3-msg exit
end


function kill-user
    sudo pkill -KILL -u $argv
end

function tm
    time $argv    
    echo " "
end

function logout
    i3-msg exit
end



function grepproc
    ps -A | grep $argv
end

function serv
    sudo /etc/init.d/$argv[1] $argv[2]
end

function service-list
    ls /etc/init.d/
end

function freespin
    sudo /opt/bin/revoco free
end

function clickit
    sudo /opt/bin/revoco click
end

function uz
    atool -x $argv
end

function v
    qvim $argv
end

function vs
    qvim -S ~/.vim/sessions/{$argv}
end

function ffs
    firefox
    sleep 2
    xdotool type ":sessionload $argv"
    xdotool key Return 
end

function session-load
    restoreme $argv
end

function session-edit
    qvim ~/sessions/{$argv}
end

function vimcloj
    session-load $argv
    vs $argv
    konsole --workdir /home/michael/proj/clojure/{$argv} -e lein repl
end

function ins
    sudo apt-get install $argv
end

function upg
    sudo apt-get upgrade $argv
end

function kill-last
    kill -9 %1
end

function pstatus
    apt-cache policy $argv
end

function aptup
    sudo apt-get update
end

function psearch
    apt-cache search $argv
end

function repo
    sudo add-apt-repository $argv
    aptup
end

function ppa
    sudo add-apt-repository ppa:$argv
    aptup
end

function here
    ls -A | grep -i $argv
end

function unins
    sudo apt-get remove $argv
end

function cs-compile
    ~/clojurescript/bin/cljsc $argv[1] '{:optimizations :advanced}' > $argv[2]
end

function version-info
    cat /etc/linuxmint/info
    cat /etc/*-release
end

function lclj
    zathura /home/michael/calibre/tech/Amit\ Rathore/Clojure\ in\ Action\ 2E\ MEAP\ version\ 06\ \(1244\)/Clojure\ in\ Action\ 2E\ MEAP\ version\ 06\ -\ Amit\ Rathore.pdf &
    idea
end

function pdfextract
    pdftk A=$argv[1] cat A$argv[2]-$argv[3] output temp.pdf
    mv temp.pdf $argv[1]
end

function pdfkillcover
    pdfextract $argv[1] 2 end
end

function winclass
    xprop -id (mywin) | grep WM_CLASS | cut -d '"' -f4 
end

function wtfisthis
    whoami
    echo \n
    version-info
    echo \n
    inxi -Sxx
end


function msg
    # notify-send --expire-time=1 $argv
    twmnc $argv
end

function getvol
    pactl list sinks | sed -n -e '/State: RUNNING/,$p' | grep "Volume: 0" | cut -d " " -f4 | head -c3
end

function trackname
    qdbus org.mpris.clementine /Player org.freedesktop.MediaPlayer.GetMetadata | grep album | cut -d ":" -f2 | cut -d " " -f2-7
end

function appendtoplaylist
    clementine -a $argv
end

function testthis
    set -U lengthofgv (size-of-getvol)
    echo $lengthofgv
    if test 2 = 2
        echo "yes"
    end
end
    

function setlastvol
    set -U lastvolume (getvol)
end

function restorelastvol
    setvol $lastvolume
end

function size-of-getvol
    lengthofgetvol.sh
end


alias netflix netflix-desktop

# . /opt/fish/standard.fish

#--------------------------------------------------------------------------
# git stuff
#--------------------------------------------------------------------------
function gl
    git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
end

function gc
    git commit $argv
end

function gsb
    git submodule $argv
end

function gs
    git status
end

function cclass
    startvm Compilers 
    mountccl  
    qvim ~/devvm
end
#--------------------------------------------------------------------------

#--------------------------------------------------------------------------
#ssh stuff
#--------------------------------------------------------------------------
function mountccl
    sshfs ccl:/home/compilers ~/devvm -o Compression=no -o Ciphers=arcfour
end

function umountccl
    fusermount -u ~/devvm
end

function startvm
    vmrun start ~/vmware/$argv/$argv.vmx
end

function suspendvm
    vmrun suspend ~/vmware/$argv/$argv.vmx
end
#--------------------------------------------------------------------------

function coursedl
    coursera-dl -d ~/courses $argv
end

function noteit
    qvim
    sleep 0.5
    xdotool key e space s n n
end

function vlcclip
    vlc (xclip -o)
end

function vplugname
    echo $argv | cut -d "/" -f5
end

function vimplug
    cd dir (pwd)
    cd ~/.vim
    git submodule add $argv ./bundle/(vplugname $argv) 
    cd $dir
end 

function fadetoblack
    kdmctl kdm stop
end

function trackedvplug
    cat .gitmodules | grep path | cut -d "/" -f2
end

function gcal
    google calendar add "{$argv}"
end

function gcalendar
    chromeless -new-window calendar.rosenetwork.net &
    sleep 2
    i3-msg fullscreen
end

function fm
        set startingdir (pwd)
        j $argv
        open (pwd) &
        cd $startingdir
end

function keyp
    xdotool key $argv
end

function open-trans
    eval $argv[1]
    sleep 1
    set mywin (xdotool getactivewindow)
    transset -i $mywin $argv[2]
end

function trans
    currentapp
    transset -i $mywin $argv
end

function another-trans
    transset -i (xdotool getactivewindow) .{$argv}
end

function currentapp
    set -U mywin (xdotool getactivewindow)
end

function mywin
   xdotool getactivewindow
end

function transparent
    currentapp
    transset -i $mywin .86
end

function solid
    currentapp
    transset -i $mywin 1.0
end

function nextwindow
    currentapp
    set currentclass (xprop -id $mywin | grep WM_CLASS | cut -d '"' -f4)
    nextmatch $currentclass
end

function chromeless
    firefox -P chromeless -no-remote $argv &
    sleep 2
    i3-msg fullscreen
end
    
function arrangeme
    focus firefox
    i3-msg move container to workspace k
    focus dolphin
    i3-msg move container to workspace d
    focus qvim
    i3-msg move container to workspace j
    focus konsole
    i3-msg move container to workspace f
    i3-msg workspace k
    i3-msg workspace a
end

function pman
    man -t $argv | ps2pdf - /tmp/{$argv}.pdf
    open /tmp/{$argv}.pdf &
end

function why
    dpkg -S (which $argv)
end

function fz
    fzf -1 -q "$argv" | pipetest | openpipe
end

function fe
  set tmp $TMPDIR/fzf.result
  fzf --query="$argv[1]" --select-1 --exit-0 > $tmp
  if [ (cat $tmp | wc -l) -gt 0 ]
    set -U fquery (cat $tmp)
  end
end

function fp
  set tmp $TMPDIR/fzf.result
  set ph ""
  while read -l line
    echo $line | fzf > $tmp
    set ph $ph $line
  end
  echo $ph | fzf > tmp
  # fzf --query="$argv[1]" --select-1 --exit-0 > $tmp
  if [ (cat $tmp | wc -l) -gt 0 ]
    set -U fquery (cat $tmp)
  end
end

function inc
    echo argv is $argv
    set argv (math $argv + 1)
    echo argv is $argv
end

function blist
    echo in title
    calibredb list -s title:$argv
    echo in tag
    calibredb list -s tag:$argv
end

function badd
    calibredb add $argv
end

function bsrch
    calibredb list -s $argv
end

function updatebookdb
     sudo updatedb -o /home/michael/calibre/books.db -U /home/michael/calibre
end

function updateallbookdb
    updatebookdb tech-select
    updatebookdb fiction
end


function save-layout
    i3-save-tree --workspace (getCurrentWorkspace)   > ~/workspace.json
end


function sxivd
    sxiv *.png *.bmp *.jpg
end

function imgur-upload
    imgur upload $argv | grep imgur_page | cut -d ":" -f2-3 | xclip -sel clip
end

set PATH /opt/vi3/bin /opt/bin /opt/dmenu /opt/scala/bin /opt/vim-qt/bin $PATH ~/scripts ~/racket/bin /opt/cxoffice/bin ~/games/dustaet/
if test -f /home/michael/.autojump/etc/profile.d/autojump.fish; . /home/michael/.autojump/etc/profile.d/autojump.fish; end

function bind-keys
    killall sxhkd
    sxhkd -c ~/keybindings/$argv &
end

function xcow
    xcowsay $argv --cow-size=large --monitor=0 --at=100,0 --font="DejaVu Sans Mon 60"
end

function er
    set -e $argv
end

function filtermatch
    set fexpr $argv[1]
    set match $argv[2]
    for i in $$argv[3]
        set val (echo $i | sed 's/(/\\\(/g' | sed 's/)/\\\)/g')
        set toeval $fexpr $val
        set result (eval $toeval)
        if match $result $match
            echo $i
            set acc $acc $i
        end
    end
    echo $acc
end


function has
    set target $argv[1]
    for i in $$argv[2]
        echo $i
        set acc $acc (tolower $i)
    end
    println $acc
end


function replace-str
    echo $argv[3..-1] | sed 's/$argv[1]/$argv[2]/g'
end

function testf
    echo $argv[1]
    echo $argv[2..-1]
end

function removespaces-from-fnames
        for i in (ls)
            mv $i (echo $i | sed 's/ //g')
        end
end

function show-winclass
    msg (winclass)
end    

function update-calibre
    sudo python -c "import sys; py3 = sys.version_info[0] > 2; u = __import__('urllib.request' if py3 else 'urllib', fromlist=1); exec(u.urlopen('http://status.calibre-ebook.com/linux_installer').read()); main()"
end
